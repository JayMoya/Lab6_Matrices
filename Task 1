import numpy as np
import matplotlib.pyplot as plt
import scipy.linalg as la
%matplotlib inline

def describe_matrix(matrix):
  if matrix.size > 0:

    zeroes = (matrix==0).all()
    ones = (matrix ==1).all()
    Id = np.all(np.equal(matrix,A))
    is_square = True if matrix.shape[0] == matrix.shape[1] else False
    print(f'Matrix:\n{matrix}\n\nShape:\t{matrix.shape}\nRank:\t{matrix.ndim}\nIs Square: {is_square}'
        f'\nIs zero identity: {zeroes}\nIs ones identity: {ones}\nIs Identity Matrix: {Id}')

          
  else: 
    print("Null ") 


A = np.array([[1,6,3,8], [8,5,7,9], [8,4,6,8],[9,7,5,7]])
L= np.array([[9,6,7,12], [8,6,4,13], [8,5,2,14],[3,4,6,10]])
J = np.array([[4,7,9,18], [6,8,6,5], [8,7,4,7],[9,7,8,9]])
Y = np.array([[7,5,8,8], [7,8,6,5], [9,6,5,12],[8,7,6,11]])
M= np.array([[5,6,8,9], [5,6,7,6],[8,9,7,9],[7,8,9,7]])
O = np.eye(4)

describe_matrix(A)
print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
describe_matrix(L)
print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
describe_matrix(J)
print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
describe_matrix(Y)
print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
describe_matrix(M)
print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
